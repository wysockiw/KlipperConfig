#####################################################################
#   Macros
#####################################################################
[gcode_macro WW_PURGE_LINE]
variable_adaptive_enable: True      # Change to False if you'd like the purge to be in the same spot every print
variable_z_height: 0.2              # Height above the bed to purge
variable_purge_amount: 40           # Amount of filament in millimeters to purge
variable_line_length: 50            # Overall desired length of purge line in millimeters, around 1/5th of X axis length is a good starting value
variable_flow_rate: 24              # Desired flow rate in mm3/s (Around 12 for standard flow hotends, around 24 for high flow hotends)
variable_x_default: 10              # Default X location to purge. If adaptive_enable is True, this is overwritten
variable_y_default: 10              # Default Y location to purge. If adaptive_enable is True, this is overwritten
variable_distance_to_object_y: 15   # Y distance in millimeters away from the print area for purging. Must be less than or equal to y_default if adaptive_enable is False
variable_x_origin: 175
variable_y_origin: 175
gcode:
    {% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
    {% set cross_section = nozzle_dia * z_height | float %}
    {% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
    {% set travel_speed = (printer.toolhead.max_velocity) * 80 | float %}

    G92 E0                                                                # Reset extruder
    G0 F{travel_speed}                                                    # Set travel speed
    G90                                                                   # Absolute positioning
    G0 X{x_origin} Y{y_origin}                                            # Move to purge position
    G0 Z{z_height}                                                        # Move to purge Z height
    M83                                                                   # Relative extrusion mode
    G1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}      # Purge line
    G1 E-.5 F2100                                                         # Retract
    G92 E0                                                                # Reset extruder distance
    M82                                                                   # Absolute extrusion mode
    G0 Z{z_height * 2} F{travel_speed}                                    # Z hop


[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z10 F300

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    {% if "xyz" in printer.toolhead.homed_axes %}
      QUAD_GANTRY_LEVEL
    {% else %}
      G28
      QUAD_GANTRY_LEVEL
    {% endif %}
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
gcode:
    SET_LED LED="chamber" RED=0 GREEN=0 BLUE=0 WHITE=1 SYNC=0 TRANSMIT=1
    {% set BED_TEMP = params.BED|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|int %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(0)|int %}
    {% set CALIBRATION = params.CALIBRATION|default(0)|int %}
    
    M140 S{BED_TEMP}  #Set the Bed tem but continue don't wit  
    M109 S160       # Set extruder temp for the clean up and wait 
    {% if "xyz" in printer.toolhead.homed_axes %}
      CLEAN_NOZZLE    
    {% else %}
      G28
      CLEAN_NOZZLE    
    {% endif %}
    G32
    G90
    G1 Z10 F3000
    {% if CALIBRATION == 0 %}
       BED_MESH_CLEAR
       BED_MESH_CALIBRATE 
    {% endif %}
    G0 Z15 X50 Y355 F10000
    M190 S{BED_TEMP}          #Set temp and wait until you get that temp 
    M140 S{BED_TEMP}          #Set bed temp and continue to work 
    M109 S{EXTRUDER_TEMP}     #Set tem and wait 
    CLEAN_NOZZLE_QUICK        #try to remove bloop 
    {% if CALIBRATION == 0 %}
       LINE_PURGE
    {% endif %}
    #SFS_DISABLE
    SFS_ENABLE

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    {% set CLEANUP_END = params.CLEANUP_END|default(0)|int %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    # Had to disable that as it migh cause colision 
    {% if CLEANUP_END == 1 %}
      CLEAN_NOZZLE 
    {% endif %}
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    SFS_DISABLE



[gcode_macro FILAMENT_RUNOUT]
gcode:
  #M300 S1 P10
  M600
  #M300 S1 P10

[gcode_macro SFS_ENABLE] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
    M117 ENABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=1 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor 
gcode:
    M117 DISABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0 ; Put your filament sensor's name after SENSOR=


[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

# #SET_NOZZLE_LEDS_ON
#     G32           ; home all axes
#     G90           ; Use absolute coordinates
#     G1 Z20 F3000  ; move nozzle away from bed

#    # M117
#    #  {% set BED_TEMP = params.BED_TEMP|default(80)|float %}
#    #  {% set HOTEND_TEMP = params.HOTEND_TEMP|default(240)|float %}

#    #  # Start bed heating
#    #  STATUS_HEATING
#    #  M140 S{BED_TEMP}
#     # Use absolute coordinates
#     G90
#     # Reset the G-Code Z offset (adjust Z offset if needed)
#     #SET_GCODE_OFFSET Z=0.0
#     # Home the printer
#     #STATUS_HOMING
#     G28
#     # Wait for bed to reach temperature
#     M190 S{BED_TEMP}    
#     #SETUP_KAMP_MESHING FUZZ_ENABLE=1
#     # Reset the G-Code Z offset (adjust Z offset if needed)
#     #SET_GCODE_OFFSET Z=0.0
#     #BED_MESH_PROFILE LOAD=default
#     BED_MESH_CLEAR
#     BED_MESH_CALIBRATE
#     # Move the nozzle near the bed
#     #G1 Z5 F300
#     # Move the nozzle very close to the bed
#     #G1 Z0.25 F300
  
#     # Set and wait for nozzle to reach temperature
     #M109 S{EXTRUDER_TEMP}
#     #G92 E0
#     #Perform Purge Line
    #STATUS_BUSY
    # Move the nozzle near the bed
    # Move the nozzle very close to the bed
    #LINE_PURGE
##########################################

[gcode_macro LIGHT_ON]
gcode:
  SET_LED LED="chamber" RED=1 GREEN=1 BLUE=1 WHITE=1 SYNC=0 TRANSMIT=1
  
[gcode_macro LIGHT_OFF]
gcode:
  SET_LED LED="chamber" RED=0 GREEN=0 BLUE=0 WHITE=0 SYNC=0 TRANSMIT=0
  
[gcode_macro ENCL_FAN_15]
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.15

[gcode_macro ENCL_FAN_30]
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.3

[gcode_macro ENCL_FAN_50]
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.5

[gcode_macro ENCL_FAN_100]
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=1

[gcode_macro ENCL_FAN_OFF]
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0


